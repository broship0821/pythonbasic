# # 정수 자료형의 형 변환

# print("2진수: ",bin(0b01111011))
# print("8진수: ",oct(0b01111011))
# print("16진수: ",hex(0b01111011))
# print("10진수: ",0b01111011)


# 서식 제어문

# print("%d" % 123)
# # print("%d%d" % 123)
# print("%d" % 123, 321)
# print("%d %d"% (123, 321))
# print("%d+%d = %d" % (123, 321, 123 + 321))

# # 출력값이 0o,0x가 없어서 진수 구분이 불가 hex같은 함수 사용하면 표시되서 진수 구분 가능
# print(" 10진 정수: %d" % 123)
# print(" 10진 정수: %d" % 0o173)
# print(" 10진 정수: %d" % 0x7b)
# print(" 8진 정수: %o" % 123)
# print(" 8진 정수: %o" % 0o173)
# print(" 8진 정수: %o" % 0x7b)
# print(" 16진 정수: %x" % 123)
# print(" 16진 정수: %x" % 0o173)
# print(" 16진 정수: %x" % 0x7b)

# print(" 정수 표현: %d" % 123)
# print(" 정수 표현: %d" % 123.123)
# print(" 정수 표현: %d%d" % (123,456))
# print("\n 실수 표현: %f" % 456) #컴퓨터는 2진수밖에 못읽기 때문에 실수를 읽는데 문제점이 있음 그래서 short,long으로 구분해서 정확성을 높임
# print(" 실수 표현: %f" % 456.456)
# print(" 실수 표현: %f%f" % (456.456, 123.123))

# print("문자 표현: %c %c"%("한","글")) #한글은 2byte여도 한글자가 표시됨
# print("문자 표현: %s"%("한""글"))
# print("문자 표현: %c %c"%(97,'현')) #아스키코드
# print("문자 표현: %c %c"%(True,False))
# print("문자 표현: %d %d"%(True,False))
# print("\n문자열 표현: %s"%"안녕")
# print("문자열 표현: %s\t%s"%("문자열","표현방식"))

# ##중요
# # \t는 무조건8칸, 무조건 좌측정렬, 무조건 칸확보해야됨
# print("기본 값: %d" % 123)
# print("설정 값: %5d" % 123) #5칸 확보하고 우측정렬
# print("설정 값: %05d"% 123) #5칸 확보하고 우측정렬, 남은자리 0으로 채움, -05d 는 안됨
# print("설정 값: %5d%5d"% (123,123))
# print("설정 값: %-5d%-5d"% (123,123)) #5칸 확보하고 좌측정렬

# print("기본 값: %f" % 123.456789)
# print("설정 값: %10.3f" % 123.456789) # 차지하는 자리수에 소수점도 포함, .3은 소수점 표시
# print("설정 값: %2.1f" % 123.456789)
# print("설정 값: %.2f" % 123.456789)

# print("123456789012345678901234567890123456789012345678901234567890")
# print("%10s%10s" % ("대한민국", "만세")) #한글 버그(vs코드에서만), 서식 제어문에서 영어 숫자는 정렬 가능하지만 한글은 어려움
# print("%10s%10s" % ("korea", "ura"))
# print("기본 값: %s" % "python test")
# print("설정 값: %20s" % "python test")

# print("==========출력결과==========")
# print()
# print("%s%7s" % ("이름",":홍길동"))
# print("나이 %3c%.0f" % (":",20))
# print("Tel %4c%s" % (":","010-1234-1234"))
# print("Tel %4c0%d-%d-%d" % (":",10,1234,1234)) #%d 맨 처음에 0이 올수 없음
# print("Tel %4c%03d-%d-%d" % (":",10,1234,1234)) #정렬하고 나머지 0으로 채우기
# print("키 %5c%s" % (":","178.5"))
# print("몸무게 %5c%s" % (":","75"))
# print("혈액형 %5c%c" % (":","O"))



#### 2장 변수

# 절대 규칙:
# 변수의 이름은 알파벳, 숫자, 언더바_ 로 구성
# 대소문자 구분
# 변수의 이름은 숫자로 시작할 수 없음
# 키워드(예약어)는 변수이름으로 사용 불가능
# 공백이나 특수 기호는 포함될 수 없음

# 예약어 and or 등
#     프로그래밍 언어 중에서 의미가 고정되어 있고, 사용자가 작성하는 프로그램 상태에 따라서 
#     의미를 변경할 수 없는 단어

# 변수명 작명 요령:
# 1. 변수는 가급적이면 작성하는 프로그램 안에서 어떤 역활을 하는지, 
# 어떤 내용을 담는지 쉽게 연상할 수 있도록 지어주는 것이 좋다.
# ex) 이름 : name 나이: age 등
# 2. 한글 변수는 사용 가능하지만 가급적 사용하지 않는다

# #좌측항, 우측항, 우측항이 주도권을 갖고 있음
# num = 100
# #대입연산자, 100을 num에 대입하다
# #변수 = 상수, (값이 존재하는)변수, 함수, 연산식
# #좌측항에는 변수만 올수있음!!

# print("정수 형 변수 사용: %d" % num)
# print("정수 형 변수 사용:", num)

# num = 5
# print("변경 전 num:", num)
# num = num + 10
# print("변경 후 num:", num)

# #managed언어는 효율을 위해 새로운 값을 할당함
# num1 = 5
# print("id num1:", id(num1)) #id()는 변수가 할당되는 번호를 알려줌
# num2 = 10
# print("id num2:", id(num2))
# num1 = num1 + num2 # sum은 예약어
# print("id sum:", id(num1))
# print(id(15))